// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@v0.1.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@v0.1.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@v0.1.1-esm/index.mjs";import{factory as d}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@v0.1.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@v0.1.1-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@v0.1.0-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import{isPrimitive as u}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@v0.1.1-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@v0.1.0-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ln@esm/index.mjs";function f(e,t){return u(e)?u(t)?null:new TypeError(p("invalid argument. Shape parameter must be a positive number. Value: `%s`.",t)):new TypeError(p("invalid argument. Scale parameter must be a positive number. Value: `%s`.",e))}function g(e,t,n){return n*h(-j(1-e()),1/t)}function c(){var u,h,j,c,v,b;if(0===arguments.length)j=d();else if(1===arguments.length){if(!s(h=arguments[0]))throw new TypeError(p("invalid argument. Options argument must be an object. Value: `%s`.",h));if(i(h,"prng")){if(!r(h.prng))throw new TypeError(p("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",h.prng));j=h.prng}else j=d(h)}else{if(v=f(u=arguments[1],b=arguments[0]))throw v;if(arguments.length>2){if(!s(h=arguments[2]))throw new TypeError(p("invalid argument. Options argument must be an object. Value: `%s`.",h));if(i(h,"prng")){if(!r(h.prng))throw new TypeError(p("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",h.prng));j=h.prng}else j=d(h)}else j=d()}return e(c=void 0===u?S:T,"NAME","weibull"),h&&h.prng?(e(c,"seed",null),e(c,"seedLength",null),n(c,"state",o(null),m),e(c,"stateLength",null),e(c,"byteLength",null),e(c,"toJSON",o(null)),e(c,"PRNG",j)):(t(c,"seed",y),t(c,"seedLength",x),n(c,"state",N,E),t(c,"stateLength",w),t(c,"byteLength",L),e(c,"toJSON",O),e(c,"PRNG",j),j=j.normalized),c;function y(){return j.seed}function x(){return j.seedLength}function w(){return j.stateLength}function L(){return j.byteLength}function N(){return j.state}function E(e){j.state=e}function O(){var e={type:"PRNG"};return e.name=c.NAME,e.state=l(j.state),e.params=void 0===b?[]:[b,u],e}function T(){return g(j,b,u)}function S(e,t){return a(e)||a(t)||e<=0||t<=0?NaN:g(j,e,t)}}var v=c();e(v,"factory",c);export{v as default,c as factory};
//# sourceMappingURL=index.mjs.map
