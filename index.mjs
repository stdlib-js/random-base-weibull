// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ln@esm/index.mjs";var f=u.isPrimitive,g=p;var c=function(e,t){return f(e)?f(t)?null:new TypeError(g("invalid argument. Shape parameter must be a positive number. Value: `%s`.",t)):new TypeError(g("invalid argument. Scale parameter must be a positive number. Value: `%s`.",e))},b=h,v=j;var y=function(e,t,n){return n*b(-v(1-e()),1/t)},x=e,w=t,L=n,N=s,E=r,O=i,T=o,P=m,S=a.factory,V=d,G=l,R=p,A=c,J=y;var M=function(){var e,t,n,s,r,i;if(0===arguments.length)n=S();else if(1===arguments.length){if(!N(t=arguments[0]))throw new TypeError(R("invalid argument. Options argument must be an object. Value: `%s`.",t));if(O(t,"prng")){if(!E(t.prng))throw new TypeError(R("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",t.prng));n=t.prng}else n=S(t)}else{if(r=A(e=arguments[1],i=arguments[0]))throw r;if(arguments.length>2){if(!N(t=arguments[2]))throw new TypeError(R("invalid argument. Options argument must be an object. Value: `%s`.",t));if(O(t,"prng")){if(!E(t.prng))throw new TypeError(R("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",t.prng));n=t.prng}else n=S(t)}else n=S()}return x(s=void 0===e?j:h,"NAME","weibull"),t&&t.prng?(x(s,"seed",null),x(s,"seedLength",null),L(s,"state",T(null),P),x(s,"stateLength",null),x(s,"byteLength",null),x(s,"toJSON",T(null)),x(s,"PRNG",n)):(w(s,"seed",o),w(s,"seedLength",m),L(s,"state",l,p),w(s,"stateLength",a),w(s,"byteLength",d),x(s,"toJSON",u),x(s,"PRNG",n),n=n.normalized),s;function o(){return n.seed}function m(){return n.seedLength}function a(){return n.stateLength}function d(){return n.byteLength}function l(){return n.state}function p(e){n.state=e}function u(){var t={type:"PRNG"};return t.name=s.NAME,t.state=G(n.state),t.params=void 0===i?[]:[i,e],t}function h(){return J(n,i,e)}function j(e,t){return V(e)||V(t)||e<=0||t<=0?NaN:J(n,e,t)}},z=M(),k=M;e(z,"factory",k);var q=z;export{q as default,k as factory};
//# sourceMappingURL=index.mjs.map
